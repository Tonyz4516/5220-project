    del df['case_identifier'] #irrelevant (?)
    del df['PARTY_AGENDAS_rand_2016'] #irrelevant (?) â€“ not sure what this is
    del df['pp_primary16_2016'] #this is kind of the same as response variable
    del df['pp_demprim16_2016'] #kind of the same as response variable
    del df['pp_repprim16_2016'] #kind of the same as response variable
    del df['izip_2016'] #don't need zip code when we have the state variable
    del df['votereg2_2016'] #not contributing
    del df['votereg_f_2016'] #not contributing
    del df['regzip_2016'] #lots of missing values
    del df['turnout16_2016'] #not contributing
    del df['vote_usual_2016'] #lots of missing values
    del df['presvote16post_t_2016'] #this is an open-ended question.
    del df['vote2016_cand2_2016'] #this is kind of the same as the response variable. it also has lots of missing values
    del df['wished_voted_2016'] #lots of missing values
    del df['vote_regrets_2016'] #I don't think this will contribute much because most of them said "No"
    del df['second_chance_2016'] #lots of missing values
    del df['second_chance_t_2016'] #this is an open-ended qiestion. 
    del df['race_other_2016'] #this is an open-ended question. 
    del df['smokenow_2016'] #this is somewhat redundant to "smoke100_2016". and it has lots of missing values
    del df['healthcov_t_2016'] #this is an open-ended question. 
    del df['employ_t_2016'] #open-ended question;
    del df['pid3_t_2016'] #open-ended question;
    del df['religpew_t_2016'] #open-ended question;
    del df['votemeth16_rnd_2016'] #this is to indicate the order of randomization. not contributing to the dataset. this applies to the following variables with "rnd" in the names
    del df['presvote16post_rnd_2016']
    del df['vote2016_cand2_rnd_2016']
    del df['Clinton_Rubio_rnd_2016']
    del df['Clinton_Cruz_rnd_2016']
    del df['Sanders_Trump_rnd_2016']
    del df['Sanders_Rubio_rnd_2016']
    del df['second_chance_rnd_2016']
    del df['obamaapp_rnd_2016']
    del df['fav_grid_row_rnd_2016']
    del df['fav_grid_col_rnd_2016']
    del df['PARTY_AGENDAS_D_grid_row_rnd_201']
    del df['PARTY_AGENDAS_R_grid_row_rnd_201']
    del df['RIGGED_SYSTEM_grid_row_rnd_2016']
    del df['track_rnd_2016']
    del df['persfinretro_rnd_2016']
    del df['econtrend_rnd_2016']
    del df['Americatrend_rnd_2016']
    del df['futuretrend_rnd_2016']
    del df['wealth_rnd_2016']
    del df['values_culture_rnd_2016']
    del df['US_respect_rnd_2016']
    del df['trust_people_rnd_2016']
    del df['helpful_people_rnd_2016']
    del df['fair_people_rnd_2016']
    del df['t1_grid_row_rnd_2016']
    del df['imiss_row_rnd_2016']
    del df['imiss_col_rnd_2016']
    del df['immi_contribution_rnd_2016']
    del df['immi_naturalize_rnd_2016']
    del df['immi_makedifficult_rnd_2016']
    del df['immi_muslim_rnd_2016']
    del df['abortview3_rnd_2016']
    del df['gaymar_rnd_2016']
    del df['view_transgender_rnd_2016']
    del df['deathpen_rnd_2016']
    del df['police_threat_rnd_2016']
    del df['conviction_accuracy_rnd_2016']
    del df['healthreformbill_rnd_2016']
    del df['envwarm_rnd_2016']
    del df['envpoll2_rnd_2016']
    del df['affirmact_gen_rnd_2016']
    del df['taxdoug_rnd_2016']
    del df['gvmt_involment_rnd_2016']
    del df['tradepolicy_rnd_2016']
    del df['free_trade_grid_row_rnd_2016']
    del df['agree_grid_row_rnd_2016']
    del df['proud_grid_row_rnd_2016']
    del df['CONCEPTIONS_grid_row_rnd_2016']
    del df['sexism_grid_row_rnd_2016']
    del df['gender_equality_rnd_2016']
    del df['racialresent_grid_row_rnd_2016']
    del df['race_majority_row_rnd_2016']
    del df['m_SC_1_SC_4_rnd_2016']
    del df['SOCIAL_CONFORMITY_1_grid_col_rnd']
    del df['SOCIAL_CONFORMITY_2_grid_col_rnd']
    del df['SOCIAL_CONFORMITY_3_grid_col_rnd']
    del df['SOCIAL_CONFORMITY_4_grid_col_rnd']
    del df['POLITICAL_CORRECTNESS_rnd_2016']
    del df['gunown_rnd_2016']
    del df['imissf2_baseline'] #mostly missing values. and this has already been asked in the previous question
    del df['pid3_t_baseline'] #this is an open-ended question and it has lots of missing values
    del df['pid7others_baseline'] #lots of missing values; and this has already been asked in the previous question
    del df['match_generic_t_baseline'] #open-ended question
    del df['cong2012_2_t_baseline'] #open-ended question
    del df['therm_baseline'] #this is all 1s because it's the metadata for the thermometer
    del df['inputzip_baseline'] #zip code is too specific when we already know the state
    del df['votereg_f_baseline'] #this question doesn't really contribute
    del df['regzip_baseline'] #mostly NAs
    del df['votereg_fnd_baseline'] #mostly NAs
    del df['regzip2_baseline'] #mostly NAs
    del df['urbancity_t_baseline'] #open-ended question
    del df['ownhome_t_baseline'] #open-ended question
    del df['partyreg_t_baseline'] #open-ended question
    del df['OTpresvote08_baseline'] #open-ended question
    del df['repnom_t_baseline'] #open-ended question
    del df['repnom_f_baseline'] #lots of missing data
    del df['repnom_f_t_baseline'] #lots of missing data
    del df['cmatch_romn_t_baseline'] #open-ended question
    del df['cmatch_romn_f_baseline'] #lots of missing data
    del df['cmatch_ging_t_baseline'] #open-ended question and lots of NAs
    del df['cmatch_ging_f_baseline'] #lots of NAs
    del df['cmatch_paul_baseline'] #lots of NAs
    del df['cmatch_paul_t_baseline'] #open-ended question with lots of NAs
    del df['cmatch_paul_f_baseline'] #Lots of NAs
    del df['volunteerf_baseline'] #lots of NAs and this is a just question that's following another question that's already been asked
    del df['volunteernum_baseline'] #lots of NAs
    del df['polcontr_t_baseline'] #open-ended question with lots of NAs
    del df['religpew_t_baseline'] #open-ended question
    del df['religpew_protestant_baseline'] #too many NAs and this question is way too specific
    del df['religpew_protestant_t_baseline'] #open-ended question
    del df['Xreligpew_protestant_baseline'] #too many missing values
    del df['religpew_baptist_baseline'] #too many missing values
    del df['religpew_baptist_t_baseline'] #open-ended question
    del df['religpew_methodist_baseline'] #too many missing values
    del df['religpew_methodist_t_baseline'] #open-ended question
    del df['religpew_nondenom_baseline'] #too many missing values
    del df['religpew_nondenom_t_baseline'] #open-ended question
    del df['religpew_lutheran_baseline'] #too many missing values
    del df['religpew_lutheran_t_baseline'] #open-ended question
    del df['religpew_presby_baseline'] #too many missing values
    del df['religpew_presby_t_baseline'] #open-ended question
    del df['religpew_pentecost_baseline'] #too many missing values
    del df['religpew_pentecost_t_baseline'] #open-ended question
    del df['religpew_episcop_baseline'] #too many missing values
    del df['religpew_episcop_t_baseline'] #open-ended question
    del df['religpew_christian_baseline'] #too many missing values
    del df['religpew_christian_t_baseline'] #open-ended question
    del df['religpew_congreg_baseline'] #too many missing values
    del df['religpew_congreg_t_baseline'] #open-ended question
    del df['religpew_holiness_baseline'] #too many missing values
    del df['religpew_holiness_t_baseline'] #open-ended question
    del df['religpew_reformed_baseline'] #too many missing values
    del df['religpew_reformed_t_baseline'] #open-ended question
    del df['religpew_advent_baseline'] #too many missing values
    del df['religpew_advent_t_baseline'] #open-ended question
    del df['religpew_catholic_baseline'] #too many missing values
    del df['religpew_catholic_t_baseline'] #open-ended question
    del df['religpew_mormon_baseline'] #too many missing values
    del df['religpew_mormon_t_baseline'] #open-ended question
    del df['religpew_orthodox_baseline'] #too many missing values
    del df['religpew_orthodox_t_baseline'] #open-ended question
    del df['religpew_jewish_baseline'] #too many missing values
    del df['religpew_jewish_t_baseline'] #open-ended question
    del df['religpew_muslim_baseline'] #too many missing values
    del df['religpew_muslim_t_baseline'] #open-ended question
    del df['religpew_buddhist_baseline'] #too many missing values
    del df['religpew_buddhist_t_baseline'] #open-ended question
    del df['religpew_hindu_baseline'] #too many missing values
    del df['religpew_hindu_t_baseline'] #open-ended question
    del df['smokenow_baseline'] #lots of missing values and this has been asked in the previous question
    del df['healthcov_t_baseline'] #open-ended question
    del df['race_other_baseline'] #open-ended question
    del df['child18num_baseline'] #empty
    del df['child_age1_1_baseline'] #empty
    del df['child_age2_1_baseline'] #empty
    del df['child_age3_1_baseline'] #empty
    del df['child_age4_1_baseline'] #empty
    del df['child_age5_1_baseline'] #empty
    del df['child_age6_1_baseline'] #empty
    del df['child_age7_1_baseline'] #empty
    del df['child_age8_1_baseline'] #empty
    del df['child_age9_1_baseline'] #empty
    del df['child_age10_1_baseline'] #empty
    del df['job_baseline'] #lots of missing values
    del df['employstat2_t_baseline'] #open-ended question
    del df['industry_former_baseline'] #too many NAs
    del df['naics3_baseline'] #too many NAs and it has been asked in the previous question
    del df['naics3_t_baseline'] #open-ended question
    del df['occupationother_baseline'] #open-ended question
    del df['intuse_else_baseline'] #too many NAs and similar question has been asked
    del df['intuse_home_baseline'] #too many NAs and similar question has been asked
    del df['intuse_mobile_baseline'] #too many NAs and similar question has been asked
    del df['intuse_work_baseline'] #too many NAs and similar question has been asked
    del df['intuse2_home_baseline'] #too many NAs and similar question has been asked
    del df['intuse2_work_baseline'] #too many NAs and similar question has been asked
    del df['intuse2_cafe_baseline'] #too many NAs and similar question has been asked
    del df['intuse2_mobile_baseline'] #too many NAs and similar question has been asked
    del df['intuse2_else_baseline'] #too many NAs and similar question has been asked
    del df['daily_intuse_work_baseline'] #too many NAs and similar question has been asked
    del df['daily_intuse_cafe_baseline'] #too many NAs and similar question has been asked
    del df['daily_intuse_mobile_baseline'] #too many NAs and similar question has been asked
    del df['daily_intuse_else_baseline'] #too many NAs and similar question has been asked
    del df['employ_spouse_t_baseline'] #open-ended
    del df['cand_baseline'] #NOT SURE
    del df['cdid_baseline'] #NOT SURE
    del df['demnom_t_baseline'] #open-ended
    del df['izip_baseline'] #not sure if the zip code will be useful
    del df['lookupzip_baseline'] #not sure if this is useful
    del df['statefips_baseline'] #NOT SURE
    del df['post_cdid113_2012'] #dont think this will be useful
    del df['post_presvote12_other_2012'] #open-ended
    del df['post_senvote12_other_2012'] #open-ended
    del df['post_housevote12_other_2012'] #open-ended
    del df['post_pid3_t_2012'] #open-ended
    del df['post_HouseCand3Name_2012'] #lots of NAs
    del df['post_HouseCand3Party_2012'] #lots of NAs
    del df['post_SenCand3Name_2012'] #lots of NAs
    del df['post_SenCand3Party_2012'] #lots of NAs
    del df['starttime_2016'] #not relevant
    del df['endtime_2016'] #not relevant
    del df['post_HouseCand1Name_2012'] #this has lots of names so it's a lot of outcomes for a categorical variable. also we already know which party the voters voted for, so this is kind of redundant.
    del df['post_HouseCand2Name_2012'] #same reason as post_HouseCand1Name_2012
    del df['post_SenCand1Name_2012'] #same reason
    del df['post_SenCand2Name_2012'] #same reason
    
    del df['watchtv_baseline']
    del df['morn_show_1_baseline']
    del df['morn_show_2_baseline']
    del df['morn_show_3_baseline']
    del df['morn_show_4_baseline']
    del df['morn_show_5_baseline']
    del df['morn_show_6_baseline']
    del df['morn_show_99_baseline']
    del df['enews_show_1_baseline']
    del df['enews_show_2_baseline']
    del df['enews_show_3_baseline']
    del df['enews_show_4_baseline']
    del df['enews_show_5_baseline']
    del df['enews_show_6_baseline']
    del df['enews_show_7_baseline']
    del df['enews_show_99_baseline']
    del df['sundaytalkshow_1_baseline']
    del df['sundaytalkshow_2_baseline']
    del df['sundaytalkshow_3_baseline']
    del df['sundaytalkshow_4_baseline']
    del df['sundaytalkshow_5_baseline']
    del df['sundaytalkshow_99_baseline']
    del df['dailytalkshow_1_baseline']
    del df['dailytalkshow_2_baseline']
    del df['dailytalkshow_3_baseline']
    del df['dailytalkshow_4_baseline']
    del df['dailytalkshow_5_baseline']
    del df['dailytalkshow_6_baseline']
    del df['dailytalkshow_7_baseline']
    del df['dailytalkshow_8_baseline']
    del df['dailytalkshow_9_baseline']
    del df['dailytalkshow_99_baseline']
    del df['latetalk_1_baseline']
    del df['latetalk_2_baseline']
    del df['latetalk_3_baseline']
    del df['latetalk_4_baseline']
    del df['latetalk_5_baseline']
    del df['latetalk_6_baseline']
    del df['latetalk_7_baseline']
    del df['latetalk_8_baseline']
    del df['econtrend_2016']
    del df['Americatrend_2016']
    del df['SOCIAL_CONFORMITY_1_2016']
    del df['healthtaxch3_baseline']
    del df['healthqualch3_baseline']
    del df['reliablevoter_baseline']
    del df['cmatch_romn_baseline']
    del df['org_membership_1_baseline']
    del df['org_membership_2_baseline']
    del df['org_membership_4_baseline']
    del df['org_membership_5_baseline']
    del df['org_membership_7_baseline']
    del df['org_membership_8_baseline']
    del df['org_membership_10_baseline']
    del df['org_membership_11_baseline']
    del df['org_membership_12_baseline']
    del df['org_membership_13_baseline']
    del df['org_membership_14_baseline']
    del df['org_membership_15_baseline']
    del df['org_membership_16_baseline']
    del df['org_membership_17_baseline']
    del df['org_membership_18_baseline']
    del df['org_membership_19_baseline']
    del df['org_membership_20_baseline']
    del df['volunteer_baseline']
    del df['volunteerorg2_1_baseline']
    del df['volunteerorg2_2_baseline']
    del df['volunteerorg2_3_baseline']
    del df['volunteerorg2_4_baseline']
    del df['volunteerorg2_5_baseline']
    del df['pew_prayer_baseline']
    del df['faminc_baseline']
